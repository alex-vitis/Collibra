Task:

Test Page:
https://jsonplaceholder.typicode.com/

1. Write test (using any library eg. rest assured) that will call 
GET	on /comments endpoint and will assert the response code and will assert that number of comments is greater than 0 
assert that body has comment with email: "Jayne_Kuhic@sydney.com"

2. Write POJO class named 'Comment' that will represent the post from the previous exercise.
Retrieve the comments from endpoint /comments and deserialize response into the collection of objects 'Comment'

3. Write code that will filter the collection from point 2 using given condition: remove all comments from the collection that has postId different than 1. Remove all comments that do not contain word "non" in the body.

4. Please use JUnit as testing framework and maven.

Comments

0) Test for 1-4 is stored in CommentTest
1) For calling of services used Spring Http libraries
2) For working with JSON - Json path
// Was not required
3) Seems that POST calls on this page are not really working -
either there is just only mock with status 201 (OK), new id - 101 (for posts) and 501 for comments,
either number of elements is limited to 100 and 500 and each time after adding new one, it's deleted immediately
Because when I'm calling get for such element - it doesn't exist
